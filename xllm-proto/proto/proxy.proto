syntax = "proto3";

package proxy;

// The proxy service definition
service ProxyService {
  // Send an HTTP request through the proxy (legacy)
  rpc ForwardRequest(HttpRequest) returns (HttpResponse);
  
  // Send an obfuscated request through the proxy (secure)
  rpc ForwardObfuscatedRequest(ProxyRequest) returns (ProxyResponse);
}

// Obfuscated proxy request - only proxy URL is visible
message ProxyRequest {
  string proxy_url = 1;           // The proxy endpoint URL (visible)
  bytes request_package = 2;      // Serialized HttpRequest (obfuscated)
}

// Obfuscated proxy response - response data is bundled
message ProxyResponse {
  bytes response_package = 1;     // Serialized HttpResponse (obfuscated)
}

// HTTP request message (used internally, serialized into request_package)
message HttpRequest {
  string method = 1;           // HTTP method (GET, POST, etc.)
  string url = 2;              // Target URL to forward to
  map<string, string> headers = 3;  // HTTP headers
  bytes body = 4;              // Request body
}

// HTTP response message (used internally, serialized into response_package)
message HttpResponse {
  int32 status_code = 1;       // HTTP status code
  map<string, string> headers = 2;  // Response headers
  bytes body = 3;              // Response body
}

// Error details for failed requests
message ErrorDetails {
  string message = 1;
  string code = 2;
}
